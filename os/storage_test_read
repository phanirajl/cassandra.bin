#!/usr/bin/env bash

#
# Simple disk read test
#

# You want to avoid reading buffers in cache instead of disk.
# If direct is supported by your du, it is the best solution.
# If not, then if supported flush a disk buffers with "drop_caches"
# If not, only run after reboot and print the following message
echo "Due to caching, you can only run this once per day/reboot." 


export thisCommand=`basename $0`

if [ x"$1" == x ]; then
	echo "Error: missing file name"
	echo "Usage: $thisCommand file"
	exit 1
else
	fileName="$1"; shift
	if [ ! -f "$fileName" ]; then echo "No such dir: $fileName"; exit 1; fi
fi

#
# echo 3 > /proc/sys/vm/drop_caches # 1 frees Pagecache, 2 frees Dentries & Inodes, and 3 is free all
#

set -x
time sudo dd of=/dev/null if="$fileName" bs=102400000 count=1500 # iflag=direct


# Todo:
# From: http://askubuntu.com/questions/122857/can-i-copy-large-files-faster-without-using-the-file-cache
#
# There is the nocache utility, which can prepended to a command like ionice and nice. 
# It works by preloading a library which adds posix_fadvise with the POSIX_FADV_DONTNEED flag to any open calls.
#
# In simple terms, it advises the kernel that caching is not needed for that particular file; the kernel will then 
# normally not cache the file. See here for the technical details.
#
# It does wonders for any huge copy jobs, e. g. if you want to backup a multi terabyte disk in the background
#  with the least possible impact on you running system, you can do something along
#  > nice -n19 ionice -c3 nocache cp -a /vol /vol2.
#
# A package will be available in Ubuntu 13.10 and up. 
# If you are on a previous release you can either install the 13.10 package or opt for this 12.04 backport by Fran√ßois Marier.
# See: https://launchpad.net/ubuntu/+source/nocache
# And: https://launchpad.net/~fmarier/+archive/ubuntu/ppa/+index?field.series_filter=precise&batch=75&memo=75&start=75